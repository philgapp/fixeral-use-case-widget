/* tslint:disable */
/* eslint-disable */
/**
 * Eatgrim Shipping API
 * Eatgrim Shipping API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: tech@soundsgood.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Address,
    AddressFromJSON,
    AddressFromJSONTyped,
    AddressToJSON,
    Coordinates,
    CoordinatesFromJSON,
    CoordinatesFromJSONTyped,
    CoordinatesToJSON,
    DateSlot,
    DateSlotFromJSON,
    DateSlotFromJSONTyped,
    DateSlotToJSON,
    DaySlot,
    DaySlotFromJSON,
    DaySlotFromJSONTyped,
    DaySlotToJSON,
    LocationBase,
    LocationBaseFromJSON,
    LocationBaseFromJSONTyped,
    LocationBaseToJSON,
    PickupLocationAllOf,
    PickupLocationAllOfFromJSON,
    PickupLocationAllOfFromJSONTyped,
    PickupLocationAllOfToJSON,
} from './';

/**
 * 
 * @export
 * @interface PickupLocation
 */
export interface PickupLocation {
    /**
     * 
     * @type {number}
     * @memberof PickupLocation
     */
    id: number;
    /**
     * 
     * @type {number}
     * @memberof PickupLocation
     */
    price: number;
    /**
     * 
     * @type {Array<DateSlot>}
     * @memberof PickupLocation
     */
    slots: Array<DateSlot>;
    /**
     * 
     * @type {string}
     * @memberof PickupLocation
     */
    name: string;
    /**
     * 
     * @type {Address}
     * @memberof PickupLocation
     */
    address: Address;
    /**
     * 
     * @type {Coordinates}
     * @memberof PickupLocation
     */
    coordinates: Coordinates;
    /**
     * 
     * @type {Array<DaySlot>}
     * @memberof PickupLocation
     */
    openingHours?: Array<DaySlot>;
}

export function PickupLocationFromJSON(json: any): PickupLocation {
    return PickupLocationFromJSONTyped(json, false);
}

export function PickupLocationFromJSONTyped(json: any, ignoreDiscriminator: boolean): PickupLocation {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'price': json['price'],
        'slots': ((json['slots'] as Array<any>).map(DateSlotFromJSON)),
        'name': json['name'],
        'address': AddressFromJSON(json['address']),
        'coordinates': CoordinatesFromJSON(json['coordinates']),
        'openingHours': !exists(json, 'openingHours') ? undefined : ((json['openingHours'] as Array<any>).map(DaySlotFromJSON)),
    };
}

export function PickupLocationToJSON(value?: PickupLocation | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'price': value.price,
        'slots': ((value.slots as Array<any>).map(DateSlotToJSON)),
        'name': value.name,
        'address': AddressToJSON(value.address),
        'coordinates': CoordinatesToJSON(value.coordinates),
        'openingHours': value.openingHours === undefined ? undefined : ((value.openingHours as Array<any>).map(DaySlotToJSON)),
    };
}


